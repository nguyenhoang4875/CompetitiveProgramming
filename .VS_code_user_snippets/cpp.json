{
	"C++ snippet for Competitive Programming": {
		"prefix": "cp",
		"body": [
		"#include <bits/stdc++.h>",
		"#define int long long",
		"",
		"using namespace std;",
		"",
		"#define pb push_back",
		"#define all(x) x.begin(), x.end()",
		"#define F first",
		"#define S second",
		"#define For(_i,_a,_b) for(int _i = (_a); _i <= (_b); _i++)",
		"#define Ford(_i, _a, _b) for (int _i = (_a); _i >= (_b); _i--)",
		"#define Fore(it,x) for(auto it = x.begin(); it != x.end(); ++it)",
		"",
		"using vb = vector<bool>;",
		"using vvb = vector<vb>;",
		"using vc = vector<char>;",
		"using vvc = vector<vc>;",
		"using vi = vector<int>;",
		"using vvi = vector<vi>;",
		"using pii = pair<int, int>;",
		"using vii = vector<pii>;",
		"",
		"//*** START CODING ***//",
		"",
		"const int oo = 1e18, mod = 1e9 + 7;",
		"const int ms = 1e5 + 5;",
		"int n;",
		"",
		"void solve() {",
		"",
		"}",
		"",
		"int32_t main() {",
		"    ios::sync_with_stdio(false);",
		"    cin.tie(nullptr);",
		"",
		"    int tcs;",
		"    cin >> tcs;",
		"    while (tcs--) {",
		"        solve();",
		"    }",
		"    return 0;",
		"}"
		],
		"description": "competitive simple"
	},
	"C++ snippet for Competitive Programming 1TC": {
		"prefix": "cp1",
		"body": [
		"#include <bits/stdc++.h>",
		"#define int long long",
		"",
		"using namespace std;",
		"",
		"#define pb push_back",
		"#define all(x) x.begin(), x.end()",
		"#define F first",
		"#define S second",
		"#define For(_i,_a,_b) for(int _i = (_a); _i <= (_b); _i++)",
		"#define Ford(_i, _a, _b) for (int _i = (_a); _i >= (_b); _i--)",
		"#define Fore(it,x) for(auto it = x.begin(); it != x.end(); ++it)",
		"",
		"using vb = vector<bool>;",
		"using vvb = vector<vb>;",
		"using vc = vector<char>;",
		"using vvc = vector<vc>;",
		"using vi = vector<int>;",
		"using vvi = vector<vi>;",
		"using pii = pair<int, int>;",
		"using vii = vector<pii>;",
		"",
		"//*** START CODING ***//",
		"",
		"const int oo = 1e18, mod = 1e9 + 7;",
		"const int ms = 1e5 + 5;",
		"int n;",
		"",
		"void solve() {",
		"",
		"}",
		"",
		"int32_t main() {",
		"    ios::sync_with_stdio(false);",
		"    cin.tie(nullptr);",
		"",
		"    solve();",
		"    return 0;",
		"}"
		],
		"description": "competitive simple one test case"
	},
	"C++ snippet for Competitive Programming Debug": {
		"prefix": "cpd",
		"body": [
			"#include<bits/stdc++.h>",
			"#define int long long",
			"",
			"using namespace std;",
			"",
			"//*** debug(x) ***//",
			"#define debug(x) cout << \"[\" << #x << \"]\" << \" : \" << (x) << endl",
			"",
			"#if 1",
			"template <class Ch, class Tr, class Container>",
			"basic_ostream <Ch, Tr> & operator << (basic_ostream <Ch, Tr> & os, Container const& x) {",
			"    os << \"{ \";",
			"    for(auto& y : x)os << y << \", \";",
			"    return os << \"}\";",
			"}",
			"",
			"template <class X, class Y>",
			"ostream & operator << (ostream & os, pair <X, Y> const& p) {",
			"    return os << \"(\" << p.first << \", \" << p.second << \")\" ;",
			"}",
			"#endif",
			"",
			"template<typename T>",
			"void check_here(T x){",
			"    cout << \"------------- \" << x << \" -------------\" << endl;",
			"}",
			"",
			"//*** define ***//",
			"#define pb push_back",
			"#define all(x) x.begin(), x.end()",
			"#define F first",
			"#define S second",
			"#define For(_i,_a,_b) for(int _i = (_a); _i <= (_b); _i++)",
			"#define Ford(_i, _a, _b) for (int _i = (_a); _i >= (_b); _i--)",
			"#define Fore(it,x) for(auto it = x.begin(); it != x.end(); ++it)",
			"",
			"//*** custom using ***//",
			"using vb = vector<bool>;",
			"using vvb = vector<vb>;",
			"using vc = vector<char>;",
			"using vvc = vector<vc>;",
			"using vi = vector<int>;",
			"using vvi = vector<vi>;",
			"using pii = pair<int, int>;",
			"using vii = vector<pii>;",
			"",
			"//*** START CODING ***//",
			"",
			"const int oo = 1e18, mod = 1e9 + 7;",
			"const int ms = 1e5 + 5;",
			"int n;",
			"",
			"void solve() {",
			"",
			"}",
			"",
			"int32_t main() {",
			"    ios_base::sync_with_stdio(false);",
			"    cin.tie(nullptr);",
			"",
			"    int tcs;",
			"    cin >> tcs;",
			"    while(tcs--) {",
			"        solve();",
			"    }",
			"    return 0;",
			"}"
		],
		"description": "competitive debug test cases"
	},
	"C++ snippet for Competitive Programming Debug one test case": {
		"prefix": "cpd1",
		"body": [
			"#include<bits/stdc++.h>",
			"#define int long long",
			"",
			"using namespace std;",
			"",
			"//*** debug(x) ***//",
			"#define debug(x) cout << \"[\" << #x << \"]\" << \" : \" << (x) << endl",
			"",
			"#if 1",
			"template <class Ch, class Tr, class Container>",
			"basic_ostream <Ch, Tr> & operator << (basic_ostream <Ch, Tr> & os, Container const& x) {",
			"    os << \"{ \";",
			"    for(auto& y : x)os << y << \", \";",
			"    return os << \"}\";",
			"}",
			"",
			"template <class X, class Y>",
			"ostream & operator << (ostream & os, pair <X, Y> const& p) {",
			"    return os << \"(\" << p.first << \", \" << p.second << \")\" ;",
			"}",
			"#endif",
			"",
			"template<typename T>",
			"void check_here(T x){",
			"    cout << \"------------- \" << x << \" -------------\" << endl;",
			"}",
			"",
			"//*** define ***//",
			"#define pb push_back",
			"#define all(x) x.begin(), x.end()",
			"#define F first",
			"#define S second",
			"#define For(_i,_a,_b) for(int _i = (_a); _i <= (_b); _i++)",
			"#define Ford(_i, _a, _b) for (int _i = (_a); _i >= (_b); _i--)",
			"#define Fore(it,x) for(auto it = x.begin(); it != x.end(); ++it)",
			"",
			"//*** custom using ***//",
			"using vb = vector<bool>;",
			"using vvb = vector<vb>;",
			"using vc = vector<char>;",
			"using vvc = vector<vc>;",
			"using vi = vector<int>;",
			"using vvi = vector<vi>;",
			"using pii = pair<int, int>;",
			"using vii = vector<pii>;",
			"",
			"//*** START CODING ***//",
			"",
			"const int oo = 1e18, mod = 1e9 + 7;",
			"const int ms = 1e5 + 5;",
			"int n;",
			"",
			"void solve() {",
			"",
			"}",
			"",
			"int32_t main() {",
			"    ios_base::sync_with_stdio(false);",
			"    cin.tie(nullptr);",
			"    solve();",
			"    return 0;",
			"}"
		],
		"description": "competitive debug one test case"
	}
}